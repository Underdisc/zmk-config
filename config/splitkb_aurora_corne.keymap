/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Deutsch character helpers
#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/german.dtsi"
// Left and right Guillemets »«
ZMK_UNICODE_SINGLE(de_lg, N0, N0, B, B)
ZMK_UNICODE_SINGLE(de_rg, N0, N0, A, B)
// Left and right Anführungszeichnen „“
ZMK_UNICODE_PAIR(de_az,
  N2, N0, N1, E,
  N2, N0, N1, C)
// Currency Symbol $€
ZMK_UNICODE_PAIR(cu,
  N0, N0, 2, 4)
  N2, N0, A, C)

/ {
  behaviors {
    l18: l18 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp LGUI>, <&kp CAPS>;
      mods = <(MOD_LSFT)>;
    };

    lrse7: lrse7 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp LPAR>, <&kp F11>;
      mods = <(MOD_LSFT)>;
    };
    lrse8: lrse8 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N4>, <&kp F4>;
      mods = <(MOD_LSFT)>;
    };
    lrse9: lrse9 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N3>, <&kp F3>;
      mods = <(MOD_LSFT)>;
    };
    lrse10: lrse10 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N2>, <&kp F2>;
      mods = <(MOD_LSFT)>;
    };
    lrse11: lrse11 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N1>, <&kp F1>;
      mods = <(MOD_LSFT)>;
    };
    lrse12: lrse12 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N0>, <&kp F10>;
      mods = <(MOD_LSFT)>;
    };

    r15: r15 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp QMARK>, <&kp EXCL>;
      mods = <(MOD_LSFT)>;
    };
    r16: r16 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp COMMA>;
      mods = <(MOD_LSFT)>;
    };
    r17: r17 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp FSLH>, <&kp BSLH>;
      mods = <(MOD_LSFT)>;
    };
    r20: r20 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp SPACE>, <&kp UNDER>;
      mods = <(MOD_LSFT)>;
    };

    rrse7: rrse7 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp RPAR>, <&kp F12>;
      mods = <(MOD_LSFT)>;
    };
    rrse8: rrse8 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N5>, <&kp F5>;
      mods = <(MOD_LSFT)>;
    };
    rrse9: rrse9 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N6>, <&kp F6>;
      mods = <(MOD_LSFT)>;
    };
    rrse10: rrse10 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N7>, <&kp F7>;
      mods = <(MOD_LSFT)>;
    };
    rrse11: rrse11 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N8>, <&kp F8>;
      mods = <(MOD_LSFT)>;
    };
    rrse12: rrse12 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N9>, <&kp F9>;
      mods = <(MOD_LSFT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
    default_layer {
      bindings = <
        &kp TAB   &kp Q &kp W &kp E    &kp R     &kp T      &kp Y &kp U &kp I     &kp O &kp P    &kp BSPC
        &kp GRAVE &kp A &kp S &kp D    &kp F     &kp G      &kp H &kp J &kp K     &kp L &kp SEMI &kp SQT
        &l18      &kp Z &kp X &kp C    &kp V     &kp B      &kp N &kp M &r15      &r16  &r17     &kp ESC
                              &kp LALT &kp LSHFT &kp LCTRL  &mo 2 &r20  &mo 1
      >;
    };
    lower_layer {
      bindings = <
        &trans &trans &trans     &trans &trans &trans  &trans   &de_ue    &trans &de_oe    &trans &trans
        &trans &de_ae &de_eszett &trans &trans &trans  &kp LEFT &kp DOWN  &kp UP &kp RIGHT &trans &de_az
        &trans &trans &trans     &trans &de_lg &trans  &trans   &de_rg    &trans &trans    &trans &kp PSCRN
                                 &trans &trans &trans  &trans   &kp UNDER &trans
      >;
    };
    raise_layer {
      bindings = <
        &trans  &kp PLUS &kp MINUS &kp STAR &kp PRCNT &kp LBKT  &kp RBKT &kp EQUAL &kp AMPS &kp PIPE &kp CARET &trans
        &lrse12 &lrse11  &lrse10   &lrse9   &lrse8    &lrse7    &rrse7   &rrse8    &rrse9   &rrse10  &rrse11   &rrse12
        &trans  &kp AT   &kp HASH  &cu      &kp LT    &kp LBRC  &kp RBRC &kp GT    &trans   &trans   &trans    &kp INS
                                   &kp DEL  &trans    &kp RET   &trans   &trans    &trans
      >;
    };
  };
};
