/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  behaviors {
    lrse7: lrse7 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp LBKT>, <&kp F11>;
      mods = <(MOD_LSFT)>;
    };
    lrse8: lrse8 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N4>, <&kp F4>;
      mods = <(MOD_LSFT)>;
    };
    lrse9: lrse9 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N3>, <&kp F3>;
      mods = <(MOD_LSFT)>;
    };
    lrse10: lrse10 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N2>, <&kp F2>;
      mods = <(MOD_LSFT)>;
    };
    lrse11: lrse11 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N1>, <&kp F1>;
      mods = <(MOD_LSFT)>;
    };
    lrse12: lrse12 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N0>, <&kp F10>;
      mods = <(MOD_LSFT)>;
    };

    r11: r11 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp FSLH>, <&kp BSLH>;
      mods = <(MOD_LSFT)>;
    };
    r12: r12 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp SQT>, <&kp DQT>;
      mods = <(MOD_LSFT)>;
    };
    r15: r15 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp EXCL>;
      mods = <(MOD_LSFT)>;
    };
    r16: r16 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp SEMI>;
      mods = <(MOD_LSFT)>;
    };
    r17: r17 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp COLON>, <&kp QMARK>;
      mods = <(MOD_LSFT)>;
    };

    rrse7: rrse7 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp RBKT>, <&kp F12>;
      mods = <(MOD_LSFT)>;
    };
    rrse8: rrse8 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N5>, <&kp F5>;
      mods = <(MOD_LSFT)>;
    };
    rrse9: rrse9 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N6>, <&kp F6>;
      mods = <(MOD_LSFT)>;
    };
    rrse10: rrse10 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N7>, <&kp F7>;
      mods = <(MOD_LSFT)>;
    };
    rrse11: rrse11 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N8>, <&kp F8>;
      mods = <(MOD_LSFT)>;
    };
    rrse12: rrse12 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp N9>, <&kp F9>;
      mods = <(MOD_LSFT)>;
    };
  };


  keymap {
    compatible = "zmk,keymap";
/*******************************************************************************
| TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
|  `  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  /  |  '   |
|  ~  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  .  |  ,  |  :  | ESC  |
                  | GUI | LWR | SPC |   | ENT | RSE  | ALT |
*******************************************************************************/
    default_layer {
      bindings = <
        &kp TAB    &kp Q &kp W &kp E    &kp R     &kp T  &kp Y &kp U     &kp I     &kp O &kp P &kp BSPC
        &kp GRAVE  &kp A &kp S &kp D    &kp F     &kp G  &kp H &kp J     &kp K     &kp L &r11  &r12
        &kp TILDE2 &kp Z &kp X &kp C    &kp V     &kp B  &kp N &kp M     &r15      &r16  &r17  &kp ESC
                               &kp LALT &kp LSHFT &mo 1  &mo 2 &kp SPACE &kp LCTRL
      >;
    };

/*******************************************************************************
|  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
| BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
| SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
                   | GUI |     | SPC |   | ENT |     | ALT |
*******************************************************************************/
    lower_layer {
      bindings = <
        &trans &trans &trans &trans &trans &trans  &trans   &trans    &trans   &trans    &trans &kp PSCRN
        &trans &trans &trans &trans &trans &trans  &kp LEFT &kp DOWN  &kp UP   &kp RIGHT &trans &trans
        &trans &trans &trans &trans &trans &trans  &trans   &trans    &trans   &trans    &trans &trans
                             &trans &trans &trans  &trans   &kp UNDER &kb CAPS
      >;
    };

/*******************************************************************************
|  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
| CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
| SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
                   | GUI |     | SPC |   | ENT |     | ALT |
*******************************************************************************/
    raise_layer {
      bindings = <
        &trans  &kp PLUS &kp MINUS &kp STAR &kp PRCNT &kp LPAR  &kp RPAR &kp EQUAL &kp AMPS &kp PIPE &kp CARET &kp INS
        &lrse12 &lrse11  &lrse10   &lrse9   &lrse8    &lrse7    &rrse7   &rrse8    &rrse9   &rrse10  &rrse11   &rrse12
        &trans  &kp AT   &kp HASH  &kp DLLR &kp LT    &kp LBRC  &kp RBRC &kp GT    &trans   &trans   &trans    &trans
                                   &kp LGUI &kp RET   &trans    &trans   &trans    &trans
      >;
    };
  };
};
